{"version":3,"sources":["../../../src/utils/e2eUtil.js"],"names":["path","jest","args","browser","headless","opt","width","height","page","screenshotsPath","filename","xpathEl","txt","el","expect"],"mappings":";;;;uBACA,M,EADA,W;;6BACA,M,WADA,W;;;;;;;;8BACMA,I;;;;;;;;;;;AADN,MAAA,UAAA,GAAA,sBAAA,EAAA;;;;;;;;AAGA;AACA;AACA;AAEO,iBAAA,YAAA,CAAA,OAAA,EAAqC;AAC1CC,IAAAA,IAAI,CAAJA,UAAAA,CAAAA,KAAAA;AACA,UAAMC,IAAI,GAAG,CAAA,cAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,cAAA,EAAb,8BAAa,CAAb;AAOA,UAAMC,OAAO,GAAG,MAAM,UAAA,CAAA,OAAA,CAAA,MAAA,CAAiB;AAAEC,MAAAA,QAAQ,EAAV,IAAA;AAAkBF,MAAAA;AAAlB,KAAjB,CAAtB;AACAC,IAAAA,OAAO,CAAPA,eAAAA,GAA0BH,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,EAA1BG,qBAA0BH,CAA1BG;AACA,WAX0C,OAW1C,CAX0C,CAY1C;AACD;;AAEM,iBAAA,OAAA,CAAA,OAAA,EAAgCE,GAAG,GAAG;AAAEC,IAAAA,KAAK,EAAP,IAAA;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAtC,EAAoE;AACzE,UAAMC,IAAI,GAAG,MAAML,OAAO,CAA1B,OAAmBA,EAAnB;AACA,UAAMK,IAAI,CAAJA,WAAAA,CAAN,GAAMA,CAAN;AACA,WAAA,IAAA;AACD;;AAEM,iBAAA,cAAA,CAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAuD;AAC5D,UAAM;AAAEC,MAAAA;AAAF,QAAN,OAAA;AACA,WAAO,MAAM,IAAI,CAAJ,UAAA,CAAgB;AAAET,MAAAA,IAAI,EAAG,GAAES,eAAgB,IAAGC,QAAS;AAAvC,KAAhB,CAAb;AACD;;AAEM,iBAAA,UAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAA8C;AACnD,UAAMC,OAAO,GAAG,CAAC,MAAMH,IAAI,CAAJA,EAAAA,CAAP,KAAOA,CAAP,EAAhB,CAAgB,CAAhB;AACA,UAAMI,GAAG,GAAG,MAAMJ,IAAI,CAAJA,QAAAA,CAAcK,EAAE,IAAIA,EAAE,CAAtBL,WAAAA,EAAlB,OAAkBA,CAAlB;AACAM,IAAAA,MAAM,CAANA,GAAM,CAANA,CAAAA,OAAAA,CAAAA,KAAAA;AACD","sourcesContent":["import puppeteer from 'puppeteer';\nconst path = require('path');\n\n// eslint is looking for `puppeteer` at root level package.json\n// eslint-disable-next-line import/no-unresolved\n// const puppeteer = require('puppeteer');\n\nexport async function setupBrowser(dirpath) {\n  jest.setTimeout(30000);\n  const args = [\n    '--no-sandbox',\n    '--disable-setuid-sandbox',\n    '--start-maximized',\n    '--lang=he-IL',\n    '--font-render-hinting=medium'\n  ];\n  const browser = await puppeteer.launch({ headless: true, args });\n  browser.screenshotsPath = path.resolve(dirpath, './__e2e_snapshots__');\n  return browser;\n  // console.log('--- browser', browser);\n}\n\nexport async function newPage(browser, opt = { width: 1024, height: 800 }) {\n  const page = await browser.newPage();\n  await page.setViewport(opt);\n  return page;\n}\n\nexport async function takeScreenshot(browser, page, filename) {\n  const { screenshotsPath } = browser;\n  return await page.screenshot({ path: `${screenshotsPath}/${filename}` });\n}\n\nexport async function expectText(page, xpath, value) {\n  const xpathEl = (await page.$x(xpath))[0];\n  const txt = await page.evaluate(el => el.textContent, xpathEl);\n  expect(txt).toEqual(value);\n}"],"file":"e2eUtil.js"}