{"version":3,"sources":["../../../../src/components/LoginBox/LoginBox.tsx"],"names":["React","props","ModeType","errors","style","mode","setMode","idField","args","position","top","right","setValue","userId","password","width","isSubmitting","handleSubmit","submitRet","setErrorText","retObj","setSuccessText","errorText","successText","LoginBox"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport tailwind from 'tailwind-rn';\nimport { Text, View, Button } from 'react-native';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  UserIcon,\n  PasswordIcon,\n  ModeType,\n  Container,\n  TouchableText,\n  LightTextLink,\n  UserIconBox,\n  PasswordIconBox,\n  TextField,\n  onSubmit,\n  idField,\n  FormData,\n  JwtData,\n  onSubmitInterface\n} from './LoginBoxUtils';\n// import { H3 } from 'es5-html-elements';\n\nexport interface afterSubmitInterface {\n  error?: string\n  success?: string\n}\ninterface Props {\n  accountId: string\n  afterSubmit?: (jwtData: JwtData | null) => afterSubmitInterface\n  style?: object\n  defaultMode?: 'Log In' | 'Sign Up' | 'Reset Password'\n}\nfunction LoginBox(props: Props) {\n  const [errorText, setErrorText] = React.useState('');\n  const [successText, setSuccessText] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [mode, setMode] = React.useState(props.defaultMode ?? ModeType.Login);\n  const { control, setValue, handleSubmit, errors } = useForm();\n\n  return (\n    <Container testID=\"authui-container\" style={props.style}>\n      <Text style={tailwind('text-2xl mb-3')}>{mode}</Text>\n      {mode === ModeType.SignUp ? (\n        <Text>\n          Already a user? <TouchableText testID=\"authui-login-link\" onPress={() => setMode(ModeType.Login)}>Log In</TouchableText>\n        </Text>\n      ) : (\n        <Text>\n          New user? <TouchableText testID=\"authui-signup-link\" onPress={() => setMode(ModeType.SignUp)}>Sign Up</TouchableText>\n        </Text>\n      )}\n      <View style={tailwind('mt-2 mb-2')} testID=\"authui-form\">\n        <UserIconBox>\n          <UserIcon />\n        </UserIconBox>\n        <Controller\n          as={(props: any) => <TextField placeholder={idField} testID=\"userId\" {...props} />}\n          control={control}\n          name=\"userId\"\n          onChange={args => args[0].nativeEvent.text}\n          defaultValue=\"\"\n        />\n        <LightTextLink accessible={false} testID=\"clear-user-id\" style={{ position: 'absolute', top: 16, right: 10 }} onPress={() => setValue([{ userId: '' }])}>⨉</LightTextLink>\n\n        {mode !== ModeType.Forgot && (\n          <>\n            <PasswordIconBox>\n              <PasswordIcon />\n            </PasswordIconBox>\n            <Controller\n              as={(props: any) => <TextField placeholder=\"Password\" secureTextEntry={true} testID=\"password\" {...props} />}\n              control={control}\n              name=\"password\"\n              onChange={args => args[0].nativeEvent.text}\n              defaultValue=\"\"\n            />\n            <LightTextLink accessible={false} testID=\"clear-password\" style={{ position: 'absolute', top: 66, right: 10 }} onPress={() => setValue([{ password: '' }])}>⨉</LightTextLink>\n          </>\n        )}\n\n        <View style={tailwind('flex flex-row items-center justify-between mt-2')} testID=\"authui-footer\">\n          <View style={{ width: '60%' }} testID=\"authui-footer-buttons\">\n            <Button\n              testID=\"authui-submit\"\n              title={isSubmitting ? 'Submitting...' : mode}\n              onPress={handleSubmit(async (formData: any) => {\n                const submitRet: onSubmitInterface | null = await onSubmit(\n                  props.accountId,\n                  formData as FormData,\n                  mode,\n                  setIsSubmitting\n                );\n                if (submitRet) {\n                  if (submitRet.error) {\n                    setErrorText(submitRet.error)\n                  } else if (submitRet.jwtData && props.afterSubmit) {\n                    const retObj: afterSubmitInterface = await props.afterSubmit(submitRet.jwtData);\n                    if (retObj) {\n                      setErrorText(retObj.error || '')\n                      setSuccessText(retObj.success || '')\n                    }\n                  }\n                }\n              })}\n            />\n          </View>\n          <View testID=\"authui-forgot\">\n            {mode === ModeType.Login && (\n              <TouchableText onPress={() => setMode(ModeType.Forgot)}>\n                Forgot Password?\n              </TouchableText>\n            )}\n          </View>\n        </View>\n      </View>\n\n      {errorText ? (\n        <Text testID=\"authui-error\" style={tailwind('text-red-600 mt-2')}>{errorText}</Text>\n      ) : (\n        successText ? (\n          <Text testID=\"authui-success\" style={tailwind('text-green-600 mt-2')}>{successText}</Text>\n        ) : (\n          <Text>{' '}</Text>\n        )\n      )}\n    </Container>\n  );\n};\n\nexport default LoginBox;"],"file":"LoginBox.js"}