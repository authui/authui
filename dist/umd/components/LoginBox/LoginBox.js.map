{"version":3,"sources":["../../../../src/components/LoginBox/LoginBox.tsx"],"names":["React","ModeType","errors","mode","setMode","props","idField","args","position","top","right","setValue","userId","password","width","isSubmitting","handleSubmit","jwtData","errorText","LoginBox"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport tailwind from 'tailwind-rn';\nimport { Text, View, Button } from 'react-native';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  UserIcon,\n  PasswordIcon,\n  ModeType,\n  Container,\n  TouchableText,\n  LightTextLink,\n  UserIconBox,\n  PasswordIconBox,\n  TextField,\n  onSubmit,\n  idField,\n  FormData,\n  JwtData\n} from './LoginBoxUtils';\n// import { H3 } from 'es5-html-elements';\n\ninterface Props {\n  accountId: string\n  afterSubmit?: (jwtData: JwtData | null) => void\n}\nfunction LoginBox(props: Props) {\n  const [errorText, setErrorText] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [mode, setMode] = React.useState(ModeType.SignUp);\n  const { control, setValue, handleSubmit, errors } = useForm();\n\n  return (\n    <Container nativeID=\"authui-container\">\n      <Text style={tailwind('text-2xl mb-3')}>{mode}</Text>\n      {mode === ModeType.SignUp ? (\n        <Text>\n          Already a user? <TouchableText onPress={() => setMode(ModeType.Login)}>Log In</TouchableText>\n        </Text>\n      ) : (\n        <Text>\n          New user? <TouchableText onPress={() => setMode(ModeType.SignUp)}>Sign Up</TouchableText>\n        </Text>\n      )}\n      <View style={tailwind('mt-2 mb-2')} nativeID=\"authui-form\">\n        <UserIconBox>\n          <UserIcon />\n        </UserIconBox>\n        <Controller\n          as={(props: any) => <TextField placeholder={idField} nativeID=\"userId\" {...props} />}\n          control={control}\n          name=\"userId\"\n          onChange={args => args[0].nativeEvent.text}\n          defaultValue=\"\"\n        />\n        <LightTextLink accessible={false} testID=\"clear-user-id\" style={{ position: 'absolute', top: 16, right: 10 }} onPress={() => setValue([{ userId: '' }])}>⨉</LightTextLink>\n\n        <PasswordIconBox>\n          <PasswordIcon />\n        </PasswordIconBox>\n        <Controller\n          as={(props: any) => <TextField placeholder=\"Password\" secureTextEntry={true} nativeID=\"password\" {...props} />}\n          control={control}\n          name=\"password\"\n          onChange={args => args[0].nativeEvent.text}\n          defaultValue=\"\"\n        />\n        <LightTextLink accessible={false} testID=\"clear-password\" style={{ position: 'absolute', top: 66, right: 10 }} onPress={() => setValue([{ password: '' }])}>⨉</LightTextLink>\n\n        <View style={tailwind('flex flex-row items-center justify-between mt-2')} nativeID=\"authui-footer\">\n          <View style={{ width: '40%' }}>\n            <Button\n              testID=\"authui-submit\"\n              title={isSubmitting ? 'Submitting...' : mode === ModeType.SignUp ? 'Sign Up' : 'Log In'}\n              onPress={handleSubmit(async (formData: any) => {\n                const jwtData: JwtData | null = await onSubmit(\n                  props.accountId,\n                  formData as FormData,\n                  mode,\n                  setIsSubmitting,\n                  setErrorText\n                );\n                if (props.afterSubmit) {\n                  props.afterSubmit(jwtData);\n                }\n              })}\n            />\n          </View>\n          {/* {mode === ModeType.Login && (\n            <TouchableText onPress={() => {}}>\n              Forgot Password?\n            </TouchableText>\n          )} */}\n        </View>\n      </View>\n\n      <Text testID=\"authui-error\" style={tailwind('text-red-600 mt-2')}>{errorText || ' '}</Text>\n    </Container>\n  );\n};\n\nexport default LoginBox;"],"file":"LoginBox.js"}